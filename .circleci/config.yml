version: 2
jobs:
  full-u18.04-bionic:
    docker:
      - image: mrpt/mrpt-build-env:full-bionic
    steps:
      - run:
          name: "Install dependencies"
          command: |
            apt-get update
            apt-get install software-properties-common -y
            add-apt-repository ppa:joseluisblancoc/mrpt -y
            add-apt-repository ppa:joseluisblancoc/gtsam-develop -y
            apt-get install libmrpt-dev -y
            apt-get install libgtsam-dev -y
            apt-get install libboost-serialization-dev libboost-system-dev libboost-filesystem-dev libboost-thread-dev libboost-program-options-dev libboost-date-time-dev libboost-timer-dev libboost-chrono-dev libboost-regex-dev -y
      - checkout
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update --remote
      - run:
          name: Generate cmake files
          command: |
            dpkg --listfiles libgtsam-dev  | grep cmake
            cmake -H. -Bbuild
      - run: make -C build
      - run: make CTEST_OUTPUT_ON_FAILURE=1 test -C build
#      - run: make gcov -C build
#      - run: make -C build
#      - run: bash <(curl -s https://codecov.io/bash) -X gcov -y .codecov.yml -s build
  clang-u18.04-bionic:
    docker:
      - image: mrpt/mrpt-build-env:full-bionic
    steps:
      - run:
          name: "Install dependencies"
          command: |
            apt-get update
            apt-get install software-properties-common -y
            add-apt-repository ppa:joseluisblancoc/mrpt -y
            add-apt-repository ppa:joseluisblancoc/gtsam-develop -y
            apt-get install libmrpt-dev -y
            apt-get install libgtsam-dev -y
      - checkout
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update --remote
      - run:
          name: Generate cmake files
          command: cmake -H. -Bbuild
          environment:
            CC: /usr/bin/clang-6.0
            CXX: /usr/bin/clang++-6.0
      - run: make -C build
      - run: make CTEST_OUTPUT_ON_FAILURE=1 test -C build
#      - run: make gcov -C build
#      - run: make -C build
#      - run: bash <(curl -s https://codecov.io/bash) -X gcov -y .codecov.yml -s build
workflows:
  version: 2
  build:
    jobs:
      - full-u18.04-bionic
      - clang-u18.04-bionic
